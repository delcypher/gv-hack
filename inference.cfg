;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;																			   ;
;;                GPUVerify - a Verifier for GPU Kernels					   ;
;;																			   ;
;; This file is distributed under the Microsoft Public License.  See		   ;
;; LICENSE.TXT for details.													   ;
;;																			   ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


[StaticInference]
; Define here which static and/or dynamic refutation engine you want to
; use for sequential invariant inference.
Engine = DefaultZ3_StaticEngine

[DynamicInference]
; Define here which refutation engine you want to use for sequential
; dynamic invariant inference.
Engine = RandomValues_DynamicEngine

[ParallelStaticInference]
; Define here which static refutation engines you want to use. Add a new
; Engine_X = <STATIC_REFUTATION_ENGINE> from the list of available static
; refutation engines below. You can also define your own static refutation
; engines and add them to this list.
Engine_1 = DefaultZ3_StaticEngine
Engine_2 = LMIUnsound_StaticEngine
; Engine_3 = LEIUnsound_StaticEngine
; Engine_4 = LoopUnrolling_StaticEngine

[ParallelDynamicInference]
; Define here which dynamic refutation engines you want to use. Add a new
; Engine_X = <DYNAMIC_REFUTATION_ENGINE> from the list of available dynamic
; refutation engines below. You can also define your own dynamic refutation
; engines and add them to this list.
Engine_1 = RandomValues_DynamicEngine
Engine_2 = ZeroValues_DynamicEngine
Engine_3 = MaxValues_DynamicEngine

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Static Refutation Engines ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[DefaultZ3_StaticEngine]
; This is the default static refutation engine that uses the Z3 theorem prover
; in the backend, error limit of <ErrorLimit> and no unsound strategies.
Solver = Z3
ErrorLimit = 20
DisableLEI = False
DisableLMI = False
ModifyTSO = False
LoopUnroll = -1

[DefaultCVC4_StaticEngine]
; This is the default static refutation engine that uses the CVC4 theorem prover
; in the backend, error limit of <ErrorLimit> and no unsound strategies.
Solver = cvc4
ErrorLimit = 20
DisableLEI = False
DisableLMI = False
ModifyTSO = False
LoopUnroll = -1

[LEIUnsound_StaticEngine]
; This is an unsound static refutation engine that uses the unsound strategy of
; disabling the assertion checking of loop entry invariants. This refutation
; engine cannot be trusted.
Solver = Z3
ErrorLimit = 20
DisableLEI = True
DisableLMI = False
ModifyTSO = False
LoopUnroll = -1

[LMIUnsound_StaticEngine]
; This is an unsound static refutation engine that uses the unsound strategy of
; disabling the assertion checking of loop maintained invariants. This refutation
; engine cannot be trusted.

Solver = Z3
ErrorLimit = 20
DisableLEI = False
DisableLMI = True
ModifyTSO = False
LoopUnroll = -1

[LoopUnrolling_StaticEngine]
; This is an unsound static refutation engine that enables the option to unroll
; loops following up to <LoopUnroll> back edges.
Solver = Z3
ErrorLimit = 20
DisableLEI = False
DisableLMI = False
ModifyTSO = False
LoopUnroll = 1

[LoopUnsound_StaticEngine]
; This is an unsound static refutation engine that uses the unsound strategy of
; disabling the assertion checking of loop invariants. This refutation engine
; cannot be trusted.
Solver = Z3
ErrorLimit = 20
DisableLEI = True
DisableLMI = True
ModifyTSO = False
LoopUnroll = -1

[ModifiedTSO_StaticEngine]
; This is a static refutation engine that attempts to modify the topological
; sorting order inside Houdini. This can potentially refute some different
; invariants early on in the Houdini process. (does not work in GPUVerify yet)
Solver = Z3
ErrorLimit = 20
DisableLEI = False
DisableLMI = False
ModifyTSO = True
LoopUnroll = -1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Dynamic Refutation Engines ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[RandomValues_DynamicEngine]
; This is a dynamic refutation engine where the thread ID and group ID
; values are random.
ThreadID_X = -1
ThreadID_Y = -1
ThreadID_Z = -1
GroupID_X = -1
GroupID_Y = -1
GroupID_Z = -1

[ZeroValues_DynamicEngine]
; This is a dynamic refutation engine where the thread ID and group ID
; values are all 0.
ThreadID_X = 0
ThreadID_Y = 0
ThreadID_Z = 0
GroupID_X = 0
GroupID_Y = 0
GroupID_Z = 0

[MaxValues_DynamicEngine]
; This is a dynamic refutation engine where the thread ID and group ID
; values are all at the upper boundary.
ThreadID_X = MAX
ThreadID_Y = MAX
ThreadID_Z = MAX
GroupID_X = MAX
GroupID_Y = MAX
GroupID_Z = MAX

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; You can add new refutation engines under this point ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[Custom_StaticEngine_01]
; This is an example of a user-defined refutation engine.
Solver = cvc4
ErrorLimit = 20
DisableLEI = False
DisableLMI = False
ModifyTSO = False
LoopUnroll = -1
